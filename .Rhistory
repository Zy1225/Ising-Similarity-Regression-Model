unlist(strsplit(edge_text,','))
splitted  =unlist(strsplit(edge_text,','))
theta_df$weight - theta_net %e% 'weight'
head(theta_df)
theta_df$.tail > theta_df$.head
mean9theta_df$.tail > theta_df$.head
mean(theta_df$.tail > theta_df$.head)
pasted = paste0(theta_df$.tail)
pasted
pasted = paste0(theta_df$.tail,',',theta_df$.head)
pasted
which(pasted %in% edge_text)
pasted
which(pasted %in% theta_edge_c_removing_state_party)
theta_edge_c_removing_state_party
theta_mat = Ximat(W,real_data_result$hat_alpha)
sub_theta_mat = theta_mat[sub_senators,sub_senators]
theta_net = as.network(sub_theta_mat, directed = FALSE, matrix.type = 'adjacency', ignore.eval = FALSE, names.eval = 'weight')
#network.vertex.names(theta_net) = full_names[sub_senators]
theta_net %v% "state" = state[sub_senators]
theta_net %v% "party" = party[sub_senators]
theta_net %v% "color" = color_party
theta_net %v% "x" = x[, 1]
theta_net %v% "y" = x[, 2]
set.edge.attribute(theta_net, "edge_linetype", ifelse(theta_net %e% "weight" > 0, 1, 3))
set.edge.attribute(theta_net, "edge_alpha_median", ifelse(theta_net %e% "weight" > median(theta_mat), 1,0))
theta_net %e% 'weight' =  abs(theta_net %e% 'weight')
#Remove edges from theta_net corresponding to edges with theta_{jj'} below the median
theta_df = as.data.frame(theta_net)
for(i in 1:nrow(theta_df)){
if(theta_df$edge_alpha_median[i] == 0){
theta_net[theta_df$.tail[i], theta_df$.head[i]] = 0
theta_net[theta_df$.head[i], theta_df$.tail[i]] = 0
}
}
theta_df = as.data.frame(theta_net)
theta_plot= ggnet2(theta_net, mode = c("x","y"), color = 'party', color.legend = 'Party', label = "state", label.color = "color", alpha = 0, edge.size = 'weight',edge.lty = 'edge_linetype', edge.alpha = theta_net %e% 'edge_alpha_median', edge.color = 'grey50') + ggtitle('Theta') + theme(plot.title = element_text(hjust = 0.5))+
scale_color_manual(name = 'Party',values = c('green','magenta'))
####Checking if the edges from Theta after removing State and Party edges, is a subset of Twitter edges
theta_edge = as.edgelist(theta_net)
theta_edge_c = paste0(theta_edge[,1],',',theta_edge[,2])
theta_edge
theta_edge[,1] < theta_edge[,2]
twitter_edge = as.edgelist(twitter_net)
twitter_edge_c = paste0(twitter_edge[,1],',',twitter_edge[,2])
party_edge = as.edgelist(party_net)
party_edge_c = paste0(party_edge[,1],',',party_edge[,2])
state_edge = as.edgelist(state_net)
state_edge_c = paste0(state_edge[,1],',',state_edge[,2])
theta_edge_c_removing_state_party =theta_edge_c[ (!theta_edge_c %in% state_edge_c )& (!theta_edge_c %in% party_edge_c) ]
mean(theta_edge_c_removing_state_party %in%  twitter_edge_c)
theta_edge_color = rep('grey50', nrow(theta_df))
theta_df$.tail < theta_df$.head
theta_edge_color = rep('grey50', nrow(theta_df))
pasted = paste0(theta_df$.head,',',theta_df$.tail)
which(pasted %in% theta_edge_c_removing_state_party)
length(which(pasted %in% theta_edge_c_removing_state_party))
length(theta_edge_c_removing_state_party)
theta_edge_color[which(pasted %in% theta_edge_c_removing_state_party)] = 'cyan'
set.edge.attribute(theta_net, "edge_color", theta_edge_color)
theta_plot= ggnet2(theta_net, mode = c("x","y"), color = 'party', color.legend = 'Party', label = "state", label.color = "color", alpha = 0, edge.size = 'weight',edge.lty = 'edge_linetype', edge.alpha = theta_net %e% 'edge_alpha_median', edge.color = 'edge_color') + ggtitle('Theta') + theme(plot.title = element_text(hjust = 0.5))+
scale_color_manual(name = 'Party',values = c('green','magenta'))
theta_plot
ggarrange(state_plot,party_plot,twitter_plot,theta_plot, common.legend = T, legend = 'bottom')
theta_edge_color = rep('grey50', nrow(theta_df))
pasted = paste0(theta_df$.head,',',theta_df$.tail)
theta_edge_color[which(pasted %in% theta_edge_c_removing_state_party)] = 'red'
set.edge.attribute(theta_net, "edge_color", theta_edge_color)
theta_plot= ggnet2(theta_net, mode = c("x","y"), color = 'party', color.legend = 'Party', label = "state", label.color = "color", alpha = 0, edge.size = 'weight',edge.lty = 'edge_linetype', edge.alpha = theta_net %e% 'edge_alpha_median', edge.color = 'edge_color') + ggtitle('Theta') + theme(plot.title = element_text(hjust = 0.5))+
scale_color_manual(name = 'Party',values = c('green','magenta'))
theta_plot
ggarrange(state_plot,party_plot,twitter_plot,theta_plot, common.legend = T, legend = 'bottom')
theta_mat = Ximat(W,real_data_result$hat_alpha)
sub_theta_mat = theta_mat[sub_senators,sub_senators]
theta_net = as.network(sub_theta_mat, directed = FALSE, matrix.type = 'adjacency', ignore.eval = FALSE, names.eval = 'weight')
#network.vertex.names(theta_net) = full_names[sub_senators]
theta_net %v% "state" = state[sub_senators]
theta_net %v% "party" = party[sub_senators]
theta_net %v% "color" = color_party
theta_net %v% "x" = x[, 1]
theta_net %v% "y" = x[, 2]
set.edge.attribute(theta_net, "edge_linetype", ifelse(theta_net %e% "weight" > 0, 1, 3))
set.edge.attribute(theta_net, "edge_alpha_median", ifelse(theta_net %e% "weight" > median(theta_mat), 1,0))
theta_net %e% 'weight' =  abs(theta_net %e% 'weight')
#Remove edges from theta_net corresponding to edges with theta_{jj'} below the median
theta_df = as.data.frame(theta_net)
for(i in 1:nrow(theta_df)){
if(theta_df$edge_alpha_median[i] == 0){
theta_net[theta_df$.tail[i], theta_df$.head[i]] = 0
theta_net[theta_df$.head[i], theta_df$.tail[i]] = 0
}
}
theta_df = as.data.frame(theta_net)
theta_plot= ggnet2(theta_net, mode = c("x","y"), color = 'party', color.legend = 'Party', label = "state", label.color = "color", alpha = 0, edge.size = 'weight',edge.lty = 'edge_linetype', edge.alpha = theta_net %e% 'edge_alpha_median', edge.color = 'grey50') + ggtitle('Theta') + theme(plot.title = element_text(hjust = 0.5))+
scale_color_manual(name = 'Party',values = c('green','magenta'))
theta_plot
####Checking if the edges from Theta after removing State and Party edges, is a subset of Twitter edges
theta_edge = as.edgelist(theta_net)
theta_edge_c = paste0(theta_edge[,1],',',theta_edge[,2])
twitter_edge = as.edgelist(twitter_net)
twitter_edge_c = paste0(twitter_edge[,1],',',twitter_edge[,2])
party_edge = as.edgelist(party_net)
party_edge_c = paste0(party_edge[,1],',',party_edge[,2])
state_edge = as.edgelist(state_net)
state_edge_c = paste0(state_edge[,1],',',state_edge[,2])
theta_edge_c
theta_edge_c[ (!theta_edge_c %in% state_edge_c )& (!theta_edge_c %in% party_edge_c) ]
theta_edge_c[ (!theta_edge_c %in% state_edge_c ) | (!theta_edge_c %in% party_edge_c) ]
theta_edge_c_removing_state_party =theta_edge_c[ (!theta_edge_c %in% state_edge_c )& (!theta_edge_c %in% party_edge_c) ]
mean(theta_edge_c_removing_state_party %in%  twitter_edge_c)
theta_edge_color = rep('grey50', nrow(theta_df))
pasted = paste0(theta_df$.head,',',theta_df$.tail)
theta_edge_color[which(pasted %in% theta_edge_c_removing_state_party)] = 'red'
set.edge.attribute(theta_net, "edge_color", theta_edge_color)
theta_plot= ggnet2(theta_net, mode = c("x","y"), color = 'party', color.legend = 'Party', label = "state", label.color = "color", alpha = 0, edge.size = 'weight',edge.lty = 'edge_linetype', edge.alpha = theta_net %e% 'edge_alpha_median', edge.color = 'edge_color') + ggtitle('Theta') + theme(plot.title = element_text(hjust = 0.5))+
scale_color_manual(name = 'Party',values = c('green','magenta'))
theta_plot
senator_data
senator_wiki_data
state
which(senator_wiki_data == 'TN')
which(state == 'TN')
which(state == 'MA')
tehta_net
theta_net
#Investigate why TN to MA is not colored red
which(state == 'TN')
#[1]  4 35
which(state == 'MA')
twitter[c(4,35),c(56,96)]
twitter_mat[c(4,35),c(56,96)]
W_followers[c(4,35),c(56,96)]
W_follow_adj[c(4,35),c(56,96)]
W_follow_adj[c(4,35),c(56,96)]
senator_data[c(4,35,56,96),]
sub_senators
which(sub_senators == 1)
which(sub_senators == 4)
which(sub_senators == 56)
which(sub_senators == 35)
which(sub_senators == 96)
theta_edge
theta_edge_c
''
'1,12' %in% theta_edge_c
'10,19' %in% theta_edge_c
'1,12' %in% twitter_edge_c
'1,12' %in% twitter_edge_c
'10,19' %in% twitter_edge_c
'1,12' %in% state_edge_c
'1,12' %in% party_edge_c
'10,19' %in% party_edge_c
'1,12' %in% state_edge_c
'10,19' %in% state_edge_c
'1,12' %in% theta_edge_c
'10,19' %in% theta_edge_c
#
'1,12' %in% twitter_edge_c
'10,19' %in% twitter_edge_c
############
theta_mat = Ximat(W,real_data_result$hat_alpha)
sub_theta_mat = theta_mat[sub_senators,sub_senators]
theta_net = as.network(sub_theta_mat, directed = FALSE, matrix.type = 'adjacency', ignore.eval = FALSE, names.eval = 'weight')
#network.vertex.names(theta_net) = full_names[sub_senators]
theta_net %v% "state" = state[sub_senators]
theta_net %v% "party" = party[sub_senators]
theta_net %v% "color" = color_party
theta_net %v% "x" = x[, 1]
theta_net %v% "y" = x[, 2]
set.edge.attribute(theta_net, "edge_linetype", ifelse(theta_net %e% "weight" > 0, 1, 3))
set.edge.attribute(theta_net, "edge_alpha_median", ifelse(theta_net %e% "weight" > median(theta_mat), 1,0))
theta_net %e% 'weight' =  abs(theta_net %e% 'weight')
#Remove edges from theta_net corresponding to edges with theta_{jj'} below the median
theta_df = as.data.frame(theta_net)
theta_df[theta_df$.head == 1, theta_df$.tail == 19]
theta_df[theta_df$.head == 1, theta_df$.tail == 19,]
theta_df[theta_df$.head == 1 & theta_df$.tail == 19,]
theta_df[theta_df$.head == 1 & theta_df$.tail == 12,]
theta_df[theta_df$.head == 10 & theta_df$.tail == 19,]
dim(theta_df)
theta_df[theta_df$.head == 19 & theta_df$.tail == 10,]
theta_df[theta_df$.head == 10 & theta_df$.tail == 19,]
#Twitter follower-followee relationship
twitter_net = as.network(sub_W_mat[,,1], directed =  FALSE, matrix.type = 'adjacency', print.adj = T, ignore.eval = FALSE, names.eval = 'weight')
as.data.frame(twitter_net)
network.vertex.names(twitter_net)
sub_senators
set.seed(1)
sub_W_mat = W[sub_senators, sub_senators, c(15,1,2)]
sub_alpha = real_data_result$hat_alpha[c(15,1,2)]
#Color for party: Democrat-Cyan, Republican-Purple
color_party = rep(NA,100)
color_party[party == "D"] = "green"
color_party[party == "R"] = "magenta"
color_party = color_party[sub_senators]
names(color_party) = party[sub_senators]
#Twitter follower-followee relationship
twitter_net = as.network(sub_W_mat[,,1], directed =  FALSE, matrix.type = 'adjacency', print.adj = T, ignore.eval = FALSE, names.eval = 'weight')
network.vertex.names(twitter_net) = full_names[sub_senators]
twitter_net %v% "state" = state[sub_senators]
twitter_net %v% "party" = party[sub_senators]
twitter_net %v% "color" = color_party
x = gplot.layout.fruchtermanreingold(twitter_net, NULL)
twitter_net %v% "x" = x[, 1]
twitter_net %v% "y" = x[, 2]
#State
state_net = as.network(sub_W_mat[,,2], directed =  FALSE, matrix.type = 'adjacency', print.adj = T, ignore.eval = FALSE, names.eval = 'weight')
network.vertex.names(state_net) = full_names[sub_senators]
state_net %v% "state" = state[sub_senators]
state_net %v% "party" = party[sub_senators]
state_net %v% "color" = color_party
state_net %v% "x" = x[, 1]
state_net %v% "y" = x[, 2]
#Party
party_net = as.network(sub_W_mat[,,3], directed =  FALSE, matrix.type = 'adjacency', print.adj = T, ignore.eval = FALSE, names.eval = 'weight')
network.vertex.names(party_net) = full_names[sub_senators]
party_net %v% "state" = state[sub_senators]
party_net %v% "party" = party[sub_senators]
party_net %v% "color" = color_party
party_net %v% "x" = x[, 1]
party_net %v% "y" = x[, 2]
state_plot = ggnet2(state_net, mode = c("x","y"),label = "state", label.color = "color", alpha = 0, edge.size = sub_alpha[2]) + ggtitle('State') + theme(plot.title = element_text(hjust = 0.5))
party_plot = ggnet2(party_net, mode = c("x","y"),label = "state", label.color = "color", alpha = 0, edge.size = sub_alpha[3]) + ggtitle('Party') + theme(plot.title = element_text(hjust = 0.5))
twitter_plot = ggnet2(twitter_net,mode = c("x","y") ,label = "state", label.color = "color", alpha = 0, edge.size = sub_alpha[1], edge.color = 'cyan') + ggtitle('Twitter') + theme(plot.title = element_text(hjust = 0.5))
############
#HatTheta
theta_mat = Ximat(W,real_data_result$hat_alpha)
sub_theta_mat = theta_mat[sub_senators,sub_senators]
theta_net = as.network(sub_theta_mat, directed = FALSE, matrix.type = 'adjacency', ignore.eval = FALSE, names.eval = 'weight')
#network.vertex.names(theta_net) = full_names[sub_senators]
theta_net %v% "state" = state[sub_senators]
theta_net %v% "party" = party[sub_senators]
theta_net %v% "color" = color_party
theta_net %v% "x" = x[, 1]
theta_net %v% "y" = x[, 2]
set.edge.attribute(theta_net, "edge_linetype", ifelse(theta_net %e% "weight" > 0, 1, 3))
set.edge.attribute(theta_net, "edge_alpha_median", ifelse(theta_net %e% "weight" > median(theta_mat), 1,0))
theta_net %e% 'weight' =  abs(theta_net %e% 'weight')
#Remove edges from theta_net corresponding to edges with theta_{jj'} below the median
theta_df = as.data.frame(theta_net)
for(i in 1:nrow(theta_df)){
if(theta_df$edge_alpha_median[i] == 0){
theta_net[theta_df$.tail[i], theta_df$.head[i]] = 0
theta_net[theta_df$.head[i], theta_df$.tail[i]] = 0
}
}
theta_df = as.data.frame(theta_net)
theta_plot= ggnet2(theta_net, mode = c("x","y"), color = 'party', color.legend = 'Party', label = "state", label.color = "color", alpha = 0, edge.size = 'weight',edge.lty = 'edge_linetype', edge.alpha = theta_net %e% 'edge_alpha_median', edge.color = 'grey50') + ggtitle('Theta') + theme(plot.title = element_text(hjust = 0.5))+
scale_color_manual(name = 'Party',values = c('green','magenta'))
####Checking if the edges from Theta after removing State and Party edges, is a subset of Twitter edges
theta_edge = as.edgelist(theta_net)
theta_edge_c = paste0(theta_edge[,1],',',theta_edge[,2])
twitter_edge = as.edgelist(twitter_net)
twitter_edge_c = paste0(twitter_edge[,1],',',twitter_edge[,2])
party_edge = as.edgelist(party_net)
party_edge_c = paste0(party_edge[,1],',',party_edge[,2])
state_edge = as.edgelist(state_net)
state_edge_c = paste0(state_edge[,1],',',state_edge[,2])
theta_edge_c_removing_state_party =theta_edge_c[ (!theta_edge_c %in% state_edge_c )& (!theta_edge_c %in% party_edge_c) ]
mean(theta_edge_c_removing_state_party %in%  twitter_edge_c)
theta_edge_color = rep('grey50', nrow(theta_df))
pasted = paste0(theta_df$.head,',',theta_df$.tail)
theta_edge_color[which(pasted %in% theta_edge_c_removing_state_party)] = 'red'
set.edge.attribute(theta_net, "edge_color", theta_edge_color)
theta_plot= ggnet2(theta_net, mode = c("x","y"), color = 'party', color.legend = 'Party', label = "state", label.color = "color", alpha = 0, edge.size = 'weight',edge.lty = 'edge_linetype', edge.alpha = theta_net %e% 'edge_alpha_median', edge.color = 'edge_color') + ggtitle('Theta') + theme(plot.title = element_text(hjust = 0.5))+
scale_color_manual(name = 'Party',values = c('green','magenta'))
theta_plot
ggarrange(state_plot,party_plot,twitter_plot,theta_plot, common.legend = T, legend = 'bottom')
twitter_plot = ggnet2(twitter_net,mode = c("x","y") ,label = "state", label.color = "color", alpha = 0, edge.size = sub_alpha[1], edge.color = 'red') + ggtitle('Twitter') + theme(plot.title = element_text(hjust = 0.5))
source('~/.active-rstudio-document', echo=TRUE)
ggarrange(state_plot,party_plot,twitter_plot,theta_plot, common.legend = T, legend = 'bottom')
head(as.data.frame(twitter_net))
theta_edge_c
theta_edge_c | party_edge_c
union(state_edge_c, party_edge_c)
theta_edge_c %in% union(state_edge_c, party_edge_c)
#theta_edge_c_removing_state_party =theta_edge_c[ (!theta_edge_c %in% state_edge_c )& (!theta_edge_c %in% party_edge_c) ]
theta_edge_c_removing_state_party =theta_edge_c[ !(theta_edge_c %in% union(state_edge_c, party_edge_c)) ]
theta_edge_c_removing_state_party
mean(theta_edge_c_removing_state_party %in%  twitter_edge_c)
theta_edge_color = rep('grey50', nrow(theta_df))
pasted = paste0(theta_df$.head,',',theta_df$.tail)
theta_edge_color[which(pasted %in% theta_edge_c_removing_state_party)] = 'red'
set.edge.attribute(theta_net, "edge_color", theta_edge_color)
theta_plot= ggnet2(theta_net, mode = c("x","y"), color = 'party', color.legend = 'Party', label = "state", label.color = "color", alpha = 0, edge.size = 'weight',edge.lty = 'edge_linetype', edge.alpha = theta_net %e% 'edge_alpha_median', edge.color = 'edge_color') + ggtitle('Theta') + theme(plot.title = element_text(hjust = 0.5))+
scale_color_manual(name = 'Party',values = c('green','magenta'))
theta_plot
ggarrange(state_plot,party_plot,twitter_plot,theta_plot, common.legend = T, legend = 'bottom')
state_edge_c
party_edge_c
#
setdiff(twitter_edge_c,theta_edge_c)
setdiff(theta_edge_c,twitter_edge_c)
"1,4" %in% twitter_edge_c
#
setdiff(setdiff(twitter_edge_c,theta_edge_c) , union(state_edge_c, party_edge_c)))
#
setdiff(setdiff(twitter_edge_c,theta_edge_c) , union(state_edge_c, party_edge_c))
"1,4" %in% state_edge_c
"1,4" %in% party_edge_c
"1,4" %in% theta_edge_c
setdiff(theta_edge_c,twitter_edge_c)
setdiff(setdiff(theta_edge_c,twitter_edge_c) , union(state_edge_c, party_edge_c))
union(state_edge_c, party_edge_c)
which(state[sub_senators] == 'TN')
which(state[sub_senators] == 'MA')
#
check = c('1,12','1,19','10,12','10,19')
check %in% twitter_edge_c
check %in% party_edge_c
check %in% state_edge_c
check %in% theta_edge_c
median(theta_mat)
theta_plot= ggnet2(theta_net, mode = c("x","y"), color = 'party', color.legend = 'Party', label = "state", label.color = "color", alpha = 0, edge.size = 'weight',edge.lty = 'edge_linetype', edge.alpha = theta_net %e% 'edge_alpha_median') + ggtitle('Theta') + theme(plot.title = element_text(hjust = 0.5))+
scale_color_manual(name = 'Party',values = c('green','magenta'))
theta_plot
theta_plot= ggnet2(theta_net, mode = c("x","y"), color = 'party', color.legend = 'Party', label = "state", label.color = "color", alpha = 0, edge.size = 'weight',edge.lty = 'edge_linetype', edge.alpha = theta_net %e% 'edge_alpha_median', edge.color = 'edge_color') + ggtitle('Theta') + theme(plot.title = element_text(hjust = 0.5))+
scale_color_manual(name = 'Party',values = c('green','magenta'))
theta_plot
theta_mat = Ximat(W,real_data_result$hat_alpha)
sub_theta_mat = theta_mat[sub_senators,sub_senators]
theta_net = as.network(sub_theta_mat, directed = FALSE, matrix.type = 'adjacency', ignore.eval = FALSE, names.eval = 'weight')
#network.vertex.names(theta_net) = full_names[sub_senators]
theta_net %v% "state" = state[sub_senators]
theta_net %v% "party" = party[sub_senators]
theta_net %v% "color" = color_party
theta_net %v% "x" = x[, 1]
theta_net %v% "y" = x[, 2]
set.edge.attribute(theta_net, "edge_linetype", ifelse(theta_net %e% "weight" > 0, 1, 3))
set.edge.attribute(theta_net, "edge_alpha_median", ifelse(theta_net %e% "weight" > median(theta_mat), 1,0))
theta_net %e% 'weight' =  abs(theta_net %e% 'weight')
#Remove edges from theta_net corresponding to edges with theta_{jj'} below the median
theta_df = as.data.frame(theta_net)
for(i in 1:nrow(theta_df)){
if(theta_df$edge_alpha_median[i] == 0){
theta_net[theta_df$.tail[i], theta_df$.head[i]] = 0
theta_net[theta_df$.head[i], theta_df$.tail[i]] = 0
}
}
theta_df = as.data.frame(theta_net)
max(theta_df$.tail)
theta_edge_color = rep('grey50', nrow(theta_df))
theta_edge_color
pasted = paste0(theta_df$.head,',',theta_df$.tail)
pasted
####Checking if the edges from Theta after removing State and Party edges, is a subset of Twitter edges
theta_edge = as.edgelist(theta_net)
theta_edge_c = paste0(theta_edge[,1],',',theta_edge[,2])
twitter_edge = as.edgelist(twitter_net)
twitter_edge_c = paste0(twitter_edge[,1],',',twitter_edge[,2])
party_edge = as.edgelist(party_net)
party_edge_c = paste0(party_edge[,1],',',party_edge[,2])
state_edge = as.edgelist(state_net)
state_edge_c = paste0(state_edge[,1],',',state_edge[,2])
#theta_edge_c_removing_state_party =theta_edge_c[ (!theta_edge_c %in% state_edge_c )& (!theta_edge_c %in% party_edge_c) ]
theta_edge_c_removing_state_party =theta_edge_c[ !(theta_edge_c %in% union(state_edge_c, party_edge_c)) ]
mean(theta_edge_c_removing_state_party %in%  twitter_edge_c)
pasted = paste0(theta_df$.head,',',theta_df$.tail)
theta_edge_color[which(pasted %in% theta_edge_c_removing_state_party)] = 'red'
set.edge.attribute(theta_net, "edge_color", theta_edge_color)
pasted
dim(pasted)
length(pasted)
which(pasted %in% theta_edge_c_removing_state_party)
check_theta_df = as.data.frame(theta_net)
check_theta_df
head(check_theta_df)
head(theta_df)
state[sub_senators[c(5,2)]
state[sub_senators[c(5,2)]]
party[sub_senators[c(5,2)]
]
theta_plot= ggnet2(theta_net, mode = c("x","y"), color.legend = 'Party', label = "state", label.color = "color", alpha = 0, edge.size = 'weight',edge.lty = 'edge_linetype', edge.alpha = theta_net %e% 'edge_alpha_median', edge.color = 'edge_color') + ggtitle('Theta') + theme(plot.title = element_text(hjust = 0.5))+
scale_color_manual(name = 'Party',values = c('green','magenta'))
theta_plot
#
check_theta_df = as.data.frame(theta_net)
check_theta_df$.head
i=1
check_theta_df$.head[i]
for(i in 1:nrow(check_theta_df)){
head_party[i] = party[sub_senators[check_theta_df$.head[i]]]
tail_party[i] = party[sub_senators[check_theta_df$.tail[i]]]
head_state[i] = state[sub_senators[check_theta_df$.head[i]]]
tail_state[i] = state[sub_senators[check_theta_df$.tail[i]]]
}
head_party = rep(NA, nrow(check_theta_df))
tail_party = rep(NA, nrow(check_theta_df))
head_state = rep(NA, nrow(check_theta_df))
tail_state = rep(NA, nrow(check_theta_df))
for(i in 1:nrow(check_theta_df)){
head_party[i] = party[sub_senators[check_theta_df$.head[i]]]
tail_party[i] = party[sub_senators[check_theta_df$.tail[i]]]
head_state[i] = state[sub_senators[check_theta_df$.head[i]]]
tail_state[i] = state[sub_senators[check_theta_df$.tail[i]]]
}
#
check_theta_df = as.data.frame(theta_net)
check_theta_df$head_party = rep(NA, nrow(check_theta_df))
check_theta_df$$tail_party = rep(NA, nrow(check_theta_df))
check_theta_df$head_state = rep(NA, nrow(check_theta_df))
check_theta_df$tail_state = rep(NA, nrow(check_theta_df))
for(i in 1:nrow(check_theta_df)){
check_theta_df$head_party[i] = party[sub_senators[check_theta_df$.head[i]]]
check_theta_df$tail_party[i] = party[sub_senators[check_theta_df$.tail[i]]]
check_theta_df$head_state[i] = state[sub_senators[check_theta_df$.head[i]]]
check_theta_df$tail_state[i] = state[sub_senators[check_theta_df$.tail[i]]]
}
#Investigate why TN to MA is not colored red
which(state == 'TN')
check_theta_df$head_party
check_theta_df
#
check_theta_df$edge_color[(check_theta_df$head_party != check_theta_df$tail_party) % (check_theta_df$head_state != check_theta_df$tail_state)]
#
check_theta_df$edge_color[(check_theta_df$head_party != check_theta_df$tail_party) & (check_theta_df$head_state != check_theta_df$tail_state)]
#
check_theta_df[(check_theta_df$head_party != check_theta_df$tail_party) & (check_theta_df$head_state != check_theta_df$tail_state),]
check_theta_df[!(check_theta_df$head_party != check_theta_df$tail_party) |  !(check_theta_df$head_state != check_theta_df$tail_state),]
sum(check_theta_df$edge_color == 'red')
sum(which(pasted %in% theta_edge_c_removing_state_party))
theta_edge_color
sum(pasted %in% theta_edge_c_removing_state_party)
theta_net %e% 'edge_color'
sum(theta_net %e% 'edge_color' == 'red')
theta_mat = Ximat(W,real_data_result$hat_alpha)
sub_theta_mat = theta_mat[sub_senators,sub_senators]
theta_net = as.network(sub_theta_mat, directed = FALSE, matrix.type = 'adjacency', ignore.eval = FALSE, names.eval = 'weight')
#network.vertex.names(theta_net) = full_names[sub_senators]
theta_net %v% "state" = state[sub_senators]
theta_net %v% "party" = party[sub_senators]
theta_net %v% "color" = color_party
theta_net %v% "x" = x[, 1]
theta_net %v% "y" = x[, 2]
set.edge.attribute(theta_net, "edge_linetype", ifelse(theta_net %e% "weight" > 0, 1, 3))
set.edge.attribute(theta_net, "edge_alpha_median", ifelse(theta_net %e% "weight" > median(theta_mat), 1,0))
theta_net %e% 'weight' =  abs(theta_net %e% 'weight')
#Remove edges from theta_net corresponding to edges with theta_{jj'} below the median
theta_df = as.data.frame(theta_net)
for(i in 1:nrow(theta_df)){
if(theta_df$edge_alpha_median[i] == 0){
theta_net[theta_df$.tail[i], theta_df$.head[i]] = 0
theta_net[theta_df$.head[i], theta_df$.tail[i]] = 0
}
}
theta_df = as.data.frame(theta_net)
theta_plot= ggnet2(theta_net, mode = c("x","y"), color = 'party', color.legend = 'Party', label = "state", label.color = "color", alpha = 0, edge.size = 'weight',edge.lty = 'edge_linetype', edge.alpha = theta_net %e% 'edge_alpha_median', edge.color = 'grey50') + ggtitle('Theta') + theme(plot.title = element_text(hjust = 0.5))+
scale_color_manual(name = 'Party',values = c('green','magenta'))
####Checking if the edges from Theta after removing State and Party edges, is a subset of Twitter edges
theta_edge = as.edgelist(theta_net)
theta_edge_c = paste0(theta_edge[,1],',',theta_edge[,2])
twitter_edge = as.edgelist(twitter_net)
twitter_edge_c = paste0(twitter_edge[,1],',',twitter_edge[,2])
party_edge = as.edgelist(party_net)
party_edge_c = paste0(party_edge[,1],',',party_edge[,2])
state_edge = as.edgelist(state_net)
state_edge_c = paste0(state_edge[,1],',',state_edge[,2])
#
setdiff(twitter_edge_c,theta_edge_c)
setdiff(theta_edge_c,twitter_edge_c)
#
setdiff(setdiff(twitter_edge_c,theta_edge_c) , union(state_edge_c, party_edge_c))
setdiff(setdiff(theta_edge_c,twitter_edge_c) , union(state_edge_c, party_edge_c))
#theta_edge_c_removing_state_party =theta_edge_c[ (!theta_edge_c %in% state_edge_c )& (!theta_edge_c %in% party_edge_c) ]
theta_edge_c_removing_state_party =theta_edge_c[ !(theta_edge_c %in% union(state_edge_c, party_edge_c)) ]
mean(theta_edge_c_removing_state_party %in%  twitter_edge_c)
theta_edge_color = rep('grey50', nrow(theta_df))
pasted = paste0(theta_df$.head,',',theta_df$.tail)
theta_edge_color[which(pasted %in% theta_edge_c_removing_state_party)] = 'red'
set.edge.attribute(theta_net, "edge_color", theta_edge_color)
sum(pasted %in% theta_edge_c_removing_state_party)
sum(theta_net %e% 'edge_color' == 'red')
theta_edge_color = rep('grey50', nrow(theta_df))
pasted = paste0(theta_df$.head,',',theta_df$.tail)
theta_edge_color[which(pasted %in% theta_edge_c_removing_state_party)] = 'red'
dim(theta_net)
theta_net[20,20]
theta_edge_color
twitter_net[20,20]
party_net[20,20]
theta_net
?set.edge.attribute
g %e% "mevval"
set.edge.attribute(theta_net, "test", 1:144)
#
set.edge.attribute(theta_net, "test", 1:144)
check_theta_df = as.data.frame(theta_net)
check_theta_df$test
length(check_theta_df$test)
check_theta_df$test
length(unique(check_theta_df$test))
#
set.edge.attribute(theta_net, "test", 1:190)
length(unique(check_theta_df$test))
check_theta_df$test
theta_net
summary(check_theta_df$test)
summary(theta_net)
plot_data = ggnet2(theta_net, mode = c("x","y"), color = 'party', color.legend = 'Party', label = "state", label.color = "color", alpha = 0, edge.size = 'weight',edge.lty = 'edge_linetype', edge.alpha = theta_net %e% 'edge_alpha_median') + ggtitle('Theta') + theme(plot.title = element_text(hjust = 0.5))+
scale_color_manual(name = 'Party',values = c('green','magenta'))
plot_data = ggnet2(theta_net, mode = c("x","y"), color = 'party', color.legend = 'Party', label = "state", label.color = "color", alpha = 0, edge.size = 'weight',edge.lty = 'edge_linetype', edge.alpha = theta_net %e% 'edge_alpha_median') + ggtitle('Theta') + theme(plot.title = element_text(hjust = 0.5))+
scale_color_manual(name = 'Party',values = c('green','magenta'))$data
plot_data\
plot_data
plot_data = ggnet2(theta_net, mode = c("x","y"), color = 'party', color.legend = 'Party', label = "state", label.color = "color", alpha = 0, edge.size = 'weight',edge.lty = 'edge_linetype', edge.alpha = theta_net %e% 'edge_alpha_median') + ggtitle('Theta') + theme(plot.title = element_text(hjust = 0.5))+
scale_color_manual(name = 'Party',values = c('green','magenta'))
plot_data = plot_data$$data
plot_data = ggnet2(theta_net, mode = c("x","y"), color = 'party', color.legend = 'Party', label = "state", label.color = "color", alpha = 0, edge.size = 'weight',edge.lty = 'edge_linetype', edge.alpha = theta_net %e% 'edge_alpha_median') + ggtitle('Theta') + theme(plot.title = element_text(hjust = 0.5))+
scale_color_manual(name = 'Party',values = c('green','magenta'))
plot_data = plot_data$data
plot_data
plot(plot_data)
